/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fes.aragon;

import AppPackage.AnimationClass;
import fes.aragon.archivos.SintacticoKarel;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Axel
 */
public class Karen extends javax.swing.JFrame {
    
    private BufferedReader reader;
    private String linea;
    private ArrayList<String> sentenciasFor = new ArrayList<>();
    private ArrayList<String> sentenciasWhile = new ArrayList<>();
    
    private int coordX = 1;
    private int coordY = 20;
    private int posX = 30;
    private int posY = 420;
    
    private int posXfrutas[] = new int[5];
    private int posYfrutas[] = new int[5];

    /**
     * Creates new form Karen
     */
    public Karen() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        cargarFrutas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCerrar = new javax.swing.JLabel();
        lblMinimizar = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        fruta1 = new javax.swing.JLabel();
        fruta2 = new javax.swing.JLabel();
        fruta3 = new javax.swing.JLabel();
        fruta4 = new javax.swing.JLabel();
        fruta5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        sprite = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtFuente = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        btnCompi = new javax.swing.JLabel();
        btnEje = new javax.swing.JLabel();
        btnMover = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCerrar.setBackground(new java.awt.Color(0, 153, 153));
        lblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/Cerrar.png"))); // NOI18N
        lblCerrar.setToolTipText("Cerrar");
        lblCerrar.setOpaque(true);
        lblCerrar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblCerrarMouseMoved(evt);
            }
        });
        lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCerrarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCerrarMouseExited(evt);
            }
        });
        jPanel1.add(lblCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 0, -1, -1));

        lblMinimizar.setBackground(new java.awt.Color(0, 153, 153));
        lblMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/Minimizar.png"))); // NOI18N
        lblMinimizar.setToolTipText("Minimizar");
        lblMinimizar.setOpaque(true);
        lblMinimizar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseMoved(evt);
            }
        });
        lblMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseExited(evt);
            }
        });
        jPanel1.add(lblMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 0, -1, -1));

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel5.setText("KAREL");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 150, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setOpaque(false);
        jPanel3.setLayout(null);

        fruta1.setBackground(new java.awt.Color(255, 255, 255));
        fruta1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/pacman.png"))); // NOI18N
        jPanel3.add(fruta1);
        fruta1.setBounds(470, 30, 20, 20);

        fruta2.setBackground(new java.awt.Color(255, 255, 255));
        fruta2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/pacman.png"))); // NOI18N
        jPanel3.add(fruta2);
        fruta2.setBounds(470, 60, 20, 20);

        fruta3.setBackground(new java.awt.Color(255, 255, 255));
        fruta3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/pacman.png"))); // NOI18N
        jPanel3.add(fruta3);
        fruta3.setBounds(470, 90, 20, 20);

        fruta4.setBackground(new java.awt.Color(255, 255, 255));
        fruta4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/pacman.png"))); // NOI18N
        jPanel3.add(fruta4);
        fruta4.setBounds(470, 120, 20, 20);

        fruta5.setBackground(new java.awt.Color(255, 255, 255));
        fruta5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/pacman.png"))); // NOI18N
        jPanel3.add(fruta5);
        fruta5.setBounds(470, 150, 20, 20);

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 500, 440));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sprite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/pacman.png"))); // NOI18N
        jPanel2.add(sprite, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 418, -1, -1));

        txtFuente.setColumns(20);
        txtFuente.setRows(5);
        txtFuente.setText("INICIOPROGRAMA\n\nFINPROGRAMA");
        jScrollPane1.setViewportView(txtFuente);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 34, 310, 392));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/tabla.png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 430));

        btnCompi.setBackground(new java.awt.Color(255, 255, 255));
        btnCompi.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnCompi.setForeground(new java.awt.Color(0, 153, 153));
        btnCompi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCompi.setText("Compilar");
        btnCompi.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 2, true));
        btnCompi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCompi.setOpaque(true);
        btnCompi.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCompiMouseMoved(evt);
            }
        });
        btnCompi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCompiMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCompiMouseExited(evt);
            }
        });
        jPanel2.add(btnCompi, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 460, 100, 30));

        btnEje.setBackground(new java.awt.Color(255, 255, 255));
        btnEje.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnEje.setForeground(new java.awt.Color(0, 153, 153));
        btnEje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEje.setText("Ejecutar");
        btnEje.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 2, true));
        btnEje.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEje.setOpaque(true);
        btnEje.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnEjeMouseMoved(evt);
            }
        });
        btnEje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEjeMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEjeMouseExited(evt);
            }
        });
        jPanel2.add(btnEje, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 460, 80, 30));

        btnMover.setBackground(new java.awt.Color(255, 255, 255));
        btnMover.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnMover.setForeground(new java.awt.Color(0, 153, 153));
        btnMover.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnMover.setText("Mover frutas");
        btnMover.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 2, true));
        btnMover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMover.setOpaque(true);
        btnMover.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnMoverMouseMoved(evt);
            }
        });
        btnMover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMoverMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMoverMouseExited(evt);
            }
        });
        jPanel2.add(btnMover, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 90, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 860, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblCerrarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseMoved
        lblCerrar.setBackground(Color.red);
    }//GEN-LAST:event_lblCerrarMouseMoved

    private void lblCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblCerrarMouseClicked

    private void lblCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseExited
        lblCerrar.setBackground(new Color(0,153,153));
    }//GEN-LAST:event_lblCerrarMouseExited

    private void lblMinimizarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseMoved
        lblMinimizar.setBackground(Color.blue);
    }//GEN-LAST:event_lblMinimizarMouseMoved

    private void lblMinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseClicked
        this.setState(ICONIFIED);
    }//GEN-LAST:event_lblMinimizarMouseClicked

    private void lblMinimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseExited
        lblMinimizar.setBackground(new Color(0,153,153));
    }//GEN-LAST:event_lblMinimizarMouseExited

    private void btnCompiMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompiMouseMoved
        btnCompi.setBackground(new Color(0, 153, 153));
        btnCompi.setForeground(Color.white);
    }//GEN-LAST:event_btnCompiMouseMoved

    private void btnCompiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompiMouseClicked
        btnCompi.requestFocus();
        
        String codigo = txtFuente.getText();
        
        File fichero = new File ("Codigo.txt");
        PrintWriter writer;
        try{
            writer = new PrintWriter(fichero);
            writer.println(codigo);
            writer.close();
        }catch( FileNotFoundException ex){
            System.out.println("Archivo no encontrado");
            ex.printStackTrace();
        }
        
        String[] ruta = { System.getProperty("user.dir") + "\\Codigo.txt" };
        
        SintacticoKarel sint = new SintacticoKarel();
        sint.main(ruta);
        
    }//GEN-LAST:event_btnCompiMouseClicked

    private void btnCompiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompiMouseExited
        btnCompi.setBackground(Color.white);
        btnCompi.setForeground(new Color(0, 153, 153));
    }//GEN-LAST:event_btnCompiMouseExited

    private void btnEjeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEjeMouseMoved
        btnEje.setBackground(new Color(0, 153, 153));
        btnEje.setForeground(Color.white);
    }//GEN-LAST:event_btnEjeMouseMoved

    private void btnEjeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEjeMouseClicked
        try {
            reader = new BufferedReader(new FileReader("Fuente.txt"));
            linea = "";
            sentenciasFor = new ArrayList<String>();
            sentenciasWhile = new ArrayList<String>();
            // TODO add your handling code here:
            //BtnEjecutar
            leerSentencia(false);
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnEjeMouseClicked

    public void leerSentencia(boolean salir) throws IOException {
        while ((linea = reader.readLine()) != null) {
            switch (linea) {
                case "mI":
                    sentenciasFor.add(linea);
                    sentenciasWhile.add(linea);
                    moverIzq();
                    System.out.println("mI");
                    break;
                case "mD":
                    sentenciasFor.add(linea);
                    sentenciasWhile.add(linea);
                    moverDer();
                    System.out.println("mD");
                    break;
                case "mA":
                    sentenciasFor.add(linea);
                    sentenciasWhile.add(linea);
                    moverArr();
                    System.out.println("mA");
                    break;
                case "ma":
                    sentenciasFor.add(linea);
                    sentenciasWhile.add(linea);
                    moverAba();
                    System.out.println("ma");
                    break;
                case "?"://if
                    si();
                    sentenciasFor.add(linea);
                    sentenciasWhile.add(linea);
                    si();
                    System.out.println("?");
                    break;
                case "*"://repetir
                    sentenciasFor.add(linea);
                    sentenciasWhile.add(linea);
                    repetir();
                    System.out.println("*");
                    break;
                case "$"://Mientras
                    sentenciasFor.add(linea);
                    sentenciasWhile.add(linea);
                    mientras();
                    System.out.println("$");
                    break;
                case "c"://comer
                    sentenciasFor.add(linea);
                    sentenciasWhile.add(linea);
                    comer();
                    System.out.println("c");
                    break;
                case "#":
                    System.out.println("#");
                    return;
                default:
                    break;
            }
            
        }
    }
    
     private void moverIzq() {
        if(!paredIzquierda()){
            posX -= 21;
            sprite.setLocation(posX, posY);
            coordX--;
            jPanel3.repaint();
        }
     }

    private void moverDer() {
        if(!paredDerecha()){
            posX += 21;
            sprite.setLocation(posX, posY);
            coordX++;
            jPanel3.repaint();
        }
    }

    private void moverArr() {
        if(!paredArriba()){
            posY -= 21;
            sprite.setLocation(posX, posY);
            coordY--;
            jPanel3.repaint();
        }
    }

    private void moverAba() {
        if(!paredAbajo()){
            posY += 21;
            sprite.setLocation(posX, posY);
            coordY++;
            jPanel3.repaint();
        }
    }

    private void si() throws IOException {
        linea = reader.readLine();
        //La linea fue la condicion
        switch(linea){
            case "pI":
                System.out.println("pI");
                if(paredIzquierda()){
                    leerSentencia(false);
                }
                break;
            case "pD":
                System.out.println("pD");
                if(paredDerecha()){
                    leerSentencia(false);
                }
                break;
            case "pA":
                System.out.println("pA");
                if(paredArriba()){
                    leerSentencia(false);
                }
                break;
            case "pa":
                System.out.println("pa");
                if(paredAbajo()){
                    leerSentencia(false);
                }
                break;
            case "NPI":
                System.out.println("NPI");
                if(!paredIzquierda()){
                    leerSentencia(false);
                }
                break;
            case "NPD":
                System.out.println("NPD");
                if(!paredDerecha()){
                    leerSentencia(false);
                }
                break;
            case "NPA":
                System.out.println("NPA");
                if(!paredArriba()){
                    leerSentencia(false);
                }
                break;
            case "NPa":
                System.out.println("NPa");
                if(!paredAbajo()){
                    leerSentencia(false);
                }
                break;
        }
    }

    private void repetir() throws IOException {
        linea = reader.readLine();
        sentenciasFor = new ArrayList<String>();
        int limite = Integer.parseInt(linea);
        System.out.println(limite);
        leerSentencia(true);
        for(int i = 0 ; i < limite-1 ; i++){
            for (String sentencia : sentenciasFor) {
                switchCompletoFor(sentencia);
            }
        } 
    }

    private void mientras() throws IOException {
        linea = reader.readLine();
        sentenciasWhile = new ArrayList<String>();
        switch(linea){
            case "pI":
                System.out.println("pI");
                while(paredIzquierda()){
                    leerSentencia(true);
                }
                break;
            case "pD":
                System.out.println("pD");
                while(paredDerecha()){
                    leerSentencia(true);
                }
                break;
            case "pA":
                System.out.println("pA");
                while(paredArriba()){
                    leerSentencia(true);
                }
                break;
            case "pa":
                System.out.println("pa");
                while(paredAbajo()){
                    leerSentencia(true);
                }
                break;
            case "NPI":
                System.out.println("NPI");
                while(!paredIzquierda()){
                    leerSentencia(true);
                }
                break;
            case "NPD":
                System.out.println("NPD");
                while(!paredDerecha()){
                    leerSentencia(true);
                }
                break;
            case "NPA":
                System.out.println("NPA");
                while(!paredArriba()){
                    leerSentencia(true);
                }
                break;
            case "NPa":
                System.out.println("NPa");
                while(!paredAbajo()){
                    leerSentencia(true);
                }
                break;
        }
    }

    private void comer() {
        int i = 0;
        for(; i < 5 ; i++) {
            int x = posXfrutas[i];
            int y = posYfrutas[i];
            
            if (coordX == x && coordY == y) {
                switch(i) {
                    case 0:
                        fruta1.setVisible(false);
                        break;
                    case 1:
                        fruta2.setVisible(false);
                        break;
                    case 2:
                        fruta3.setVisible(false);
                        break;
                    case 3:
                        fruta4.setVisible(false);
                        break;   
                    case 4:
                        fruta5.setVisible(false);
                        break;
                }
                break;
            }
        }
    }
    
    private boolean paredIzquierda(){
        return !(coordX > 0);
    }
    
    private boolean paredDerecha(){
        return !(coordX < 20);
    }
    
    private boolean paredArriba(){
        return !(coordY > 0);
    }
    
    private boolean paredAbajo(){
        return !(coordY < 20);
    }
    
    private void switchCompletoFor(String cadena) throws IOException{
        switch (cadena) {
                case "mI":
                    sentenciasWhile.add(linea);
                    moverIzq();
                    System.out.println("mI");
                    break;
                case "mD":
                    sentenciasWhile.add(linea);
                    moverDer();
                    System.out.println("mD");
                    break;
                case "mA":
                    sentenciasWhile.add(linea);
                    moverArr();
                    System.out.println("mA");
                    break;
                case "ma":
                    sentenciasWhile.add(linea);
                    moverAba();
                    System.out.println("ma");
                    break;
                case "?"://if
                    sentenciasWhile.add(linea);
                    si();
                    System.out.println("?");
                    break;
                case "*"://repetir
                    sentenciasWhile.add(linea);
                    repetir();
                    System.out.println("*");
                    break;
                case "$"://Mientras
                    sentenciasWhile.add(linea);
                    mientras();
                    System.out.println("$");
                    break;
                case "c"://comer
                    sentenciasWhile.add(linea);
                    comer();
                    System.out.println("c");
                    break;
                case "#":
                    System.out.println("#");
                    return;
                default:
                    break;
            }
    }

    
    private void btnEjeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEjeMouseExited
        btnEje.setBackground(Color.white);
        btnEje.setForeground(new Color(0, 153, 153));
    }//GEN-LAST:event_btnEjeMouseExited

    private void btnMoverMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoverMouseMoved
        btnMover.setBackground(new Color(0, 153, 153));
        btnMover.setForeground(Color.white);
    }//GEN-LAST:event_btnMoverMouseMoved

    private void btnMoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoverMouseClicked
        btnMover.requestFocus();
        cargarFrutas();
    }//GEN-LAST:event_btnMoverMouseClicked

    private void btnMoverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoverMouseExited
        btnMover.setBackground(Color.white);
        btnMover.setForeground(new Color(0, 153, 153));
    }//GEN-LAST:event_btnMoverMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Karen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Karen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Karen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Karen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Karen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnCompi;
    private javax.swing.JLabel btnEje;
    private javax.swing.JLabel btnMover;
    private javax.swing.JLabel fruta1;
    private javax.swing.JLabel fruta2;
    private javax.swing.JLabel fruta3;
    private javax.swing.JLabel fruta4;
    private javax.swing.JLabel fruta5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCerrar;
    private javax.swing.JLabel lblMinimizar;
    private javax.swing.JLabel sprite;
    private javax.swing.JTextArea txtFuente;
    // End of variables declaration//GEN-END:variables

    private void cargarFrutas() {
        int x;
        int y;
        
        for(int i = 0; i < 5; i++) {
            x = (int) (Math.random() * 20) + 1;
            y = (int) (Math.random() * 20) + 1;
            
            posXfrutas[i] = x;
            posYfrutas[i] = y;
        }
        
        x = (int) posXfrutas[0];
        y = (int) posYfrutas[0];
        fruta1.setLocation(x * 20 + 30, y * 20 + 18);
        
        x = (int) posXfrutas[1];
        y = (int) posYfrutas[1];
        fruta2.setLocation(x * 20 + 30, y * 20 + 18);
        
        x = (int) posXfrutas[2];
        y = (int) posYfrutas[2];
        fruta3.setLocation(x * 20 + 30, y * 20 + 18);
        
        x = (int) posXfrutas[3];
        y = (int) posYfrutas[3];
        fruta4.setLocation(x * 20 + 30, y * 20 + 18);
        
        x = (int) posXfrutas[4];
        y = (int) posYfrutas[4];
        fruta5.setLocation(x * 20 + 30, y * 20 + 18);
    }
}
