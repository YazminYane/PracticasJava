/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fes.aragon.programas;

import AppPackage.AnimationClass;
import fes.aragon.Seleccion;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Axel
 */
public class Lexico4 extends javax.swing.JFrame {
    private Seleccion ventanaSeleccion;
    
    private String cadena = "";
    private int transiciones[][];
    private ArrayList<Character> simbolos = new ArrayList<>();
    private int numEstados = 0;
    private int numEdosFinales = 0;
    private ArrayList<Integer> estadosFinales = new ArrayList<>();
    private boolean archivoCargado = false;
    private int actual = 0;
    private int indiceCaracter = 0;
    private File archivo = null;
    String ruta = "";
    private boolean cargaPresionada = false;

    /**
     * Creates new form Lexico4
     */
    public Lexico4(Seleccion ventanaAnterior) {
        initComponents();
        this.setLocationRelativeTo(null);
        ventanaSeleccion = ventanaAnterior;
        txtRuta.setText(System.getProperty("user.dir") + "\\Lexico 4\\Configuracion.txt");
        archivo = new File(System.getProperty("user.dir") + "\\Lexico 4\\Configuracion.txt");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblCerrar = new javax.swing.JLabel();
        lblMinimizar = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblAtras = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel1 = new javax.swing.JLabel();
        txtCadena = new javax.swing.JTextField();
        sptCadena = new javax.swing.JLabel();
        btnInstrucciones = new javax.swing.JLabel();
        lblCorrecto = new javax.swing.JLabel();
        lblIncorrecto = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JLabel();
        btnSeleccionar = new javax.swing.JLabel();
        btnCargar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCerrar.setBackground(new java.awt.Color(0, 153, 153));
        lblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/Cerrar.png"))); // NOI18N
        lblCerrar.setToolTipText("Cerrar");
        lblCerrar.setOpaque(true);
        lblCerrar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblCerrarMouseMoved(evt);
            }
        });
        lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCerrarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCerrarMouseExited(evt);
            }
        });
        jPanel1.add(lblCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, -1, -1));

        lblMinimizar.setBackground(new java.awt.Color(0, 153, 153));
        lblMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/Minimizar.png"))); // NOI18N
        lblMinimizar.setToolTipText("Minimizar");
        lblMinimizar.setOpaque(true);
        lblMinimizar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseMoved(evt);
            }
        });
        lblMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinimizarMouseExited(evt);
            }
        });
        jPanel1.add(lblMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, -1, -1));

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel5.setText("Programa 4: Léxico 4");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 150, 20));

        lblAtras.setBackground(new java.awt.Color(0, 153, 153));
        lblAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/atras.png"))); // NOI18N
        lblAtras.setToolTipText("Atrás");
        lblAtras.setOpaque(true);
        lblAtras.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblAtrasMouseMoved(evt);
            }
        });
        lblAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAtrasMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblAtrasMouseExited(evt);
            }
        });
        jPanel1.add(lblAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 2, 30, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 60));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(null);

        jEditorPane1.setEditable(false);
        jEditorPane1.setBorder(null);
        jEditorPane1.setContentType("text/html"); // NOI18N
        jEditorPane1.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jEditorPane1.setText("<html>\r\n  <head>\r\n\r\n  </head>\r\n  <body>\r\n    <p align=\"center\">Este programa es un analizador léxico con tabla de transición dinámica. Las instrucciones sobre cómo configurar la tabla pueden verse seleccionando el botón <b>\"Instrucciones\"</b></p>\r\n    <p align=\"left\">La tabla de transición se cargará mediante un archivo, que por defecto es el archivo <b>\"Configuración.txt\"</b> que viene en la carpeta <b>\"Léxico 4\"</b>.</p>\n    <p align=\"left\">Si se desea utilizar otro archivo de configuración puede seleccionarse desde el botón <b>\"Seleccionar archivo\"<b>.</p>\n    <p align=\"left\">Una vez que el archivo esté seleccionado pulsa el botón <b>\"Cargar archivo\"</b> para cargar las configuraciones. Si el botón se pone de color verde ya puedes analizar cadenas, si se pone rojo significa que hubo un error en el archivo.</p>\n  </body>\r\n</html>");
        jScrollPane1.setViewportView(jEditorPane1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 530, 280));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel1.setText("Cadena:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, -1, -1));

        txtCadena.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtCadena.setForeground(new java.awt.Color(153, 153, 153));
        txtCadena.setText("Ingresa la cadena a buscar...");
        txtCadena.setBorder(null);
        txtCadena.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCadenaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCadenaFocusLost(evt);
            }
        });
        jPanel2.add(txtCadena, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 240, -1));

        sptCadena.setBackground(new java.awt.Color(255, 255, 255));
        sptCadena.setFont(new java.awt.Font("Berlin Sans FB", 1, 14)); // NOI18N
        sptCadena.setForeground(new java.awt.Color(160, 160, 160));
        sptCadena.setText("__________________________________");
        jPanel2.add(sptCadena, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 240, 20));

        btnInstrucciones.setBackground(new java.awt.Color(255, 255, 255));
        btnInstrucciones.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnInstrucciones.setForeground(new java.awt.Color(0, 153, 153));
        btnInstrucciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnInstrucciones.setText("Instrucciones");
        btnInstrucciones.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 2, true));
        btnInstrucciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInstrucciones.setOpaque(true);
        btnInstrucciones.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnInstruccionesMouseMoved(evt);
            }
        });
        btnInstrucciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInstruccionesMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInstruccionesMouseExited(evt);
            }
        });
        jPanel2.add(btnInstrucciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 320, 140, 30));

        lblCorrecto.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        lblCorrecto.setForeground(new java.awt.Color(39, 174, 96));
        lblCorrecto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/correcto.png"))); // NOI18N
        lblCorrecto.setText("¡Correcto!");
        jPanel2.add(lblCorrecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 560, 100, -1));

        lblIncorrecto.setBackground(new java.awt.Color(255, 255, 255));
        lblIncorrecto.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        lblIncorrecto.setForeground(new java.awt.Color(192, 57, 43));
        lblIncorrecto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fes/aragon/imagenes/incorrecto.png"))); // NOI18N
        lblIncorrecto.setText("¡Incorrecto!");
        jPanel2.add(lblIncorrecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 560, -1, -1));

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel2.setText("Ruta del archivo:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, 20));

        txtRuta.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jPanel2.add(txtRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 430, -1));

        btnBuscar.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscar.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(0, 153, 153));
        btnBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBuscar.setText("Analizar");
        btnBuscar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 2, true));
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.setOpaque(true);
        btnBuscar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnBuscarMouseMoved(evt);
            }
        });
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscarMouseExited(evt);
            }
        });
        jPanel2.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, 80, 30));

        btnSeleccionar.setBackground(new java.awt.Color(255, 255, 255));
        btnSeleccionar.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnSeleccionar.setForeground(new java.awt.Color(0, 153, 153));
        btnSeleccionar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSeleccionar.setText("Seleccionar archivo");
        btnSeleccionar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 2, true));
        btnSeleccionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSeleccionar.setOpaque(true);
        btnSeleccionar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnSeleccionarMouseMoved(evt);
            }
        });
        btnSeleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSeleccionarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSeleccionarMouseExited(evt);
            }
        });
        jPanel2.add(btnSeleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 140, 30));

        btnCargar.setBackground(new java.awt.Color(255, 255, 255));
        btnCargar.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnCargar.setForeground(new java.awt.Color(0, 153, 153));
        btnCargar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCargar.setText("Cargar archivo");
        btnCargar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 2, true));
        btnCargar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCargar.setOpaque(true);
        btnCargar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCargarMouseMoved(evt);
            }
        });
        btnCargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCargarMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCargarMouseExited(evt);
            }
        });
        jPanel2.add(btnCargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 140, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 560, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblCerrarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseMoved
        lblCerrar.setBackground(Color.red);
    }//GEN-LAST:event_lblCerrarMouseMoved

    private void lblCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblCerrarMouseClicked

    private void lblCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMouseExited
        lblCerrar.setBackground(new Color(0,153,153));
    }//GEN-LAST:event_lblCerrarMouseExited

    private void lblMinimizarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseMoved
        lblMinimizar.setBackground(Color.blue);
    }//GEN-LAST:event_lblMinimizarMouseMoved

    private void lblMinimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseClicked
        this.setState(ICONIFIED);
    }//GEN-LAST:event_lblMinimizarMouseClicked

    private void lblMinimizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMouseExited
        lblMinimizar.setBackground(new Color(0,153,153));
    }//GEN-LAST:event_lblMinimizarMouseExited

    private void lblAtrasMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAtrasMouseMoved
        lblAtras.setBackground(Color.blue);
    }//GEN-LAST:event_lblAtrasMouseMoved

    private void lblAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAtrasMouseClicked
        ventanaSeleccion.setState(NORMAL);
        this.dispose();
    }//GEN-LAST:event_lblAtrasMouseClicked

    private void lblAtrasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAtrasMouseExited
        lblAtras.setBackground(new Color(0,153,153));
    }//GEN-LAST:event_lblAtrasMouseExited

    private void txtCadenaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCadenaFocusGained
        sptCadena.setForeground(new Color(0, 153, 153));
        txtCadena.setText("");
        txtCadena.setForeground(Color.black);
    }//GEN-LAST:event_txtCadenaFocusGained

    private void txtCadenaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCadenaFocusLost
        sptCadena.setForeground(new Color(160, 160, 160));
        if (txtCadena.getText().isEmpty()) {
            txtCadena.setText("Ingresa la cadena a buscar...");
            txtCadena.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtCadenaFocusLost

    private void btnInstruccionesMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInstruccionesMouseMoved
        btnInstrucciones.setBackground(new Color(0, 153, 153));
        btnInstrucciones.setForeground(Color.white);
    }//GEN-LAST:event_btnInstruccionesMouseMoved

    private void btnInstruccionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInstruccionesMouseClicked
        try {
            Runtime rt = Runtime.getRuntime();
            rt.exec("notepad " + System.getProperty("user.dir") + "\\Lexico 4\\Instrucciones.txt");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al abrir el archivo. Si el error continua intenta abrirlo"
                    + " manualmente desde la carpeta \"Lexico4\"");
        }
    }//GEN-LAST:event_btnInstruccionesMouseClicked

    private void btnInstruccionesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInstruccionesMouseExited
        btnInstrucciones.setBackground(Color.white);
        btnInstrucciones.setForeground(new Color(0, 153, 153));
    }//GEN-LAST:event_btnInstruccionesMouseExited

    private void btnBuscarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseMoved
        btnBuscar.setBackground(new Color(0, 153, 153));
        btnBuscar.setForeground(Color.white);
    }//GEN-LAST:event_btnBuscarMouseMoved

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        btnBuscar.requestFocus();
        actual = 0;
        cadena = "";
        lblCorrecto.setLocation(240, 560);
        lblIncorrecto.setLocation(240, 560);
        cadena = txtCadena.getText();

        if (cadena.isEmpty() || cadena.equals("Ingresa la cadena a buscar...")) {
            JOptionPane.showMessageDialog(null, "Ingresa una cadena.");
        } else if (cadena.contains(" ")) {
            JOptionPane.showMessageDialog(null, "Las cadenas no deben contener espacios.");
        } else {
            int resultado = analizarCadena();

            if (resultado == 1) {
                AnimationClass anim = new AnimationClass();
                anim.jLabelYUp(560, 470, 10, 5, lblCorrecto);
            } else {
                AnimationClass anim = new AnimationClass();
                anim.jLabelYUp(560, 470, 10, 5, lblIncorrecto);
            }
        }
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void btnBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseExited
        btnBuscar.setBackground(Color.white);
        btnBuscar.setForeground(new Color(0, 153, 153));
    }//GEN-LAST:event_btnBuscarMouseExited

    private void btnSeleccionarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSeleccionarMouseMoved
        btnSeleccionar.setBackground(new Color(0, 153, 153));
        btnSeleccionar.setForeground(Color.white);
    }//GEN-LAST:event_btnSeleccionarMouseMoved

    private void btnSeleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSeleccionarMouseClicked
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo de texto", "txt");
        fc.setFileFilter(filtro);
        
        int seleccion = fc.showOpenDialog(this.getContentPane());
        
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            archivo = fc.getSelectedFile();
            txtRuta.setText(archivo.getAbsolutePath());
        } else if (seleccion == JFileChooser.ERROR_OPTION) {
            JOptionPane.showMessageDialog(null, "Error al abrir el archivo. Inténtalo de nuevo.");
        }
    }//GEN-LAST:event_btnSeleccionarMouseClicked

    private void btnSeleccionarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSeleccionarMouseExited
        btnSeleccionar.setBackground(Color.white);
        btnSeleccionar.setForeground(new Color(0, 153, 153));
    }//GEN-LAST:event_btnSeleccionarMouseExited

    private void btnCargarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarMouseMoved
        if (!cargaPresionada) {
            btnCargar.setBackground(new Color(0, 153, 153));
            btnCargar.setForeground(Color.white);
        }
    }//GEN-LAST:event_btnCargarMouseMoved

    private void btnCargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarMouseClicked
        cargaPresionada = true;
        ruta = txtRuta.getText();
        
        try {
            BufferedReader reader = new BufferedReader(new FileReader(ruta));
            String linea = "";
            int numLinea = 0;
            numEstados = 0;
            numEdosFinales = 0;
            int numSimbolos = 0;
            int indiceTransiciones = 0;
            boolean error = false;
            simbolos = new ArrayList<>();
            archivoCargado = false;
            
            while ((linea = reader.readLine()) != null) {
                String props[] = linea.split(" ");
                
                if (numLinea == 0) { //Linea para inicializar arreglos.
                    numEstados = Integer.valueOf(props[0]);
                    numSimbolos = Integer.valueOf(props[1]);
                    transiciones = new int[numEstados][numSimbolos];
                    
                } else if (numLinea == 1) { //Linea con los símbolos.
                    if (props.length == numSimbolos) {
                        for (String prop : props) {
                            if (prop.length() > 1) {
                                JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                                    + " configuración.\nAsegúrate de que los símbolos constan de"
                                    + " un sólo caracter", "Error", JOptionPane.ERROR_MESSAGE);
                                btnCargar.setBackground(Color.red);
                                error = true;
                                break;
                            } else {
                                simbolos.add(prop.charAt(0));
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                            + " configuración.\nRevisa que el contenido corresponda con el"
                            + " formato indicado.", "Error", JOptionPane.ERROR_MESSAGE);
                        btnCargar.setBackground(Color.red);
                        error = true;
                        break;
                    }
                    
                } else if (numLinea == 2) { //Linea con los estados finales.
                    numEdosFinales = Integer.valueOf(props[0]);
                    
                    if (numEdosFinales == (props.length - 1)) {
                        for (int indice = 1; indice < props.length; indice++) {
                            estadosFinales.add(Integer.valueOf(props[indice]));
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                            + " configuración.\nRevisa que el contenido corresponda con el"
                            + " formato indicado.", "Error", JOptionPane.ERROR_MESSAGE);
                        btnCargar.setBackground(Color.red);
                        error = true;
                        break;
                    }
                    
                } else if (numLinea >= 3 && numLinea <= (2 + numEstados)) { //Lineas de transiciones.
                    if (props.length == simbolos.size()) {            
                        int indice = 0;
                        for (String prop : props) {
                            if (prop.equals("E")) { //-1 para las transiciones con error.
                                transiciones[indiceTransiciones][indice++] = -1;
                            } else if (Integer.valueOf(prop) >= numEstados) {
                                JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                                    + " configuración.\nHay transiciones a estados que no existen."
                                    , "Error", JOptionPane.ERROR_MESSAGE);
                                btnCargar.setBackground(Color.red);
                                error = true;
                            } else {
                                transiciones[indiceTransiciones][indice++] = Integer.valueOf(prop);
                            }
                        }
                        if (error) {
                            break;
                        }
                        indiceTransiciones++;
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                            + " configuración.\nRevisa que el contenido corresponda con el"
                            + " formato indicado.", "Error", JOptionPane.ERROR_MESSAGE);
                        btnCargar.setBackground(Color.red);
                        error = true;
                        break;
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                            + " configuración.\nRevisa que el contenido corresponda con el"
                            + " formato indicado.", "Error", JOptionPane.ERROR_MESSAGE);
                    btnCargar.setBackground(Color.red);
                    error = true;
                        break;
                }
                
                numLinea++;
            }
            
            if (numLinea <= (2 + numEstados)) {
                JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                        + " configuración.\nEl número de estados no coincide con el"
                        + " número de transiciones.", "Error", JOptionPane.ERROR_MESSAGE);
                btnCargar.setBackground(Color.red);
                error = true;
            }
            
            if (!error) {
                btnCargar.setBackground(Color.green);
                archivoCargado = true;
            }
            
        } catch (FileNotFoundException ex) {
            btnCargar.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                    + " configuración.\nAsegúrate de que el nombre sea correcto"
                    + " y de que se encuentre en su ubicación.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            btnCargar.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                    + " configuración.\nRevisa que su contenido no esté dañado"
                    + " e inténtalo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            btnCargar.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "Error al cargar el archivo de"
                    + " configuración.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCargarMouseClicked

    private void btnCargarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarMouseExited
        if (!cargaPresionada) {
            btnCargar.setBackground(Color.white);
            btnCargar.setForeground(new Color(0, 153, 153));
        }
    }//GEN-LAST:event_btnCargarMouseExited

    private int analizarCadena() {
        actual = 0;
        indiceCaracter = 0;
        
        if (archivoCargado) {
            String cadena = txtCadena.getText();
            int error = 0;

            char cActual = siguienteCaracter();

            while (cActual != ' ' && error == 0) {
                try {
                    int posCActual = simbolos.indexOf(cActual);

                    if (actual != -1) {
                        actual = transiciones[actual][posCActual];
                    } else {
                        error = 1;
                        break;
                    }

                    cActual = siguienteCaracter();
                } catch (Exception ex) {
                    error = 1;
                    break;
                }
            }
            
            if (estadosFinales.contains(actual) && error == 0) {
                return 1;
            } else {
                return 0;
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se pueden analizar cadenas sin cargar"
                + " el archivo de configuración.\nAsegúrate de cargarlo y de que el"
                + " botón de carga sea de color verde.", "Falta cargar configuración", 
                JOptionPane.ERROR_MESSAGE);
            return -1;
        }
    }
    
    private char siguienteCaracter() {
        char c = ' ';
        
        if (indiceCaracter < cadena.length()) {
            c = cadena.charAt(indiceCaracter);
            indiceCaracter++;
        }
        
        return c;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lexico4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lexico4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lexico4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lexico4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lexico4(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnBuscar;
    private javax.swing.JLabel btnCargar;
    private javax.swing.JLabel btnInstrucciones;
    private javax.swing.JLabel btnSeleccionar;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAtras;
    private javax.swing.JLabel lblCerrar;
    private javax.swing.JLabel lblCorrecto;
    private javax.swing.JLabel lblIncorrecto;
    private javax.swing.JLabel lblMinimizar;
    private javax.swing.JLabel sptCadena;
    private javax.swing.JTextField txtCadena;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables
}
